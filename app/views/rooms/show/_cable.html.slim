javascript:
  current_game_challenge_ids = []
  current_game_id = ""

  $(document).ready(function(){
    App.global_chat = App.cable.subscriptions.create(
      {
        channel: "RoomChannel",
        room_id: $('#rooms-show').attr('data-room-id')
      },
      {
        connected: function(data) {
          console.log('connected')
          enableChatInput()
        },

        disconnected: function(data) {
          console.log('disconnected')
          disableChatInput()
        },
        received: function(data) {
          console.log('received', data)
          da_t = data['data_type']
          if(da_t == 'test'){
            console.log('test')
          }
          else if (da_t == 'user'){
            mg = data['message']
            if(mg == 'player_joined'){
              session_hash = data['session_hash']
              if(session_hash != "#{current_user.session_hash}" && $(".other-player[data-session-hash=" + session_hash + "]").length == 0){
                $.get("#{@room.id}/load_other_player/"+session_hash+'')
              }
            }
            else if(mg == 'player_left'){
              $('.other-player[data-session-hash='+data['session_hash']+']').remove()
            }
          }
          else if (da_t == 'chat'){
            displayChatMessage(data['sender_name'], data['chat_body'])
          }
          else if (da_t == 'game_status'){
            mg = data['message']
            if(mg == 'start_game'){
              startGame(data['game_id'])
            }
          }
          else if (da_t == 'in_game'){
            mg = data['message']
            if(mg == 'completed_challenge'){
              displayChallengeCompletedConfettiForUser(data['session_hash'])
            }
            else if(mg == 'completed_game'){
              displayGameCompletedConfettiForUser(data['session_hash'], data['player_name'])
            }
          }
        }
      }
    )
    hookChatInput()
    scrollToChatBottom()
  })

  //////////////////// CHATS ////////////////////
  function displayChatMessage(name, body){
    $('#room-chat-messages').append("<div class='chat-message'><span class='message-body'>" + name + "</span><span>" + body + "</span></div>")
    scrollToChatBottom()
  }

  function disableChatInput(){
    //TODO
  }

  function enableChatInput(){
    //TODO
  }

  function hookChatInput(){
    $('#room-chat-input-container form').submit(function(e){
      if($(this).find('input[type=text]').val() == ''){
        e.preventDefault()
      }
      else{
        setTimeout(function() {
          $('#room-chat-input-container form').find('input[type=text]').val('')
        }, 10)
      }
    })
  }

  function scrollToChatBottom(){
    $("#room-chat-messages").scrollTop($("#room-chat-messages")[0].scrollHeight);
  }

  //////////////////// GAME ////////////////////
  function startGame(game_id){
    $('[data-entity=start-game-btn] button').addClass('hidden')
    displayGameCountdown()
    setTimeout(function() {
      $.get('/games/'+game_id+'/load')
    }, 3500)
    current_game_id = game_id
  }

  function loadChallenges(challenge_ids){
    current_game_challenge_ids = challenge_ids
    loadChallenge(current_game_challenge_ids[0])
    loadChallengeTicker(challenge_ids.length)
  }

  function loadChallenge(challenge_id){
    $.get("/challenges/"+challenge_id+"/load?game_id=" + current_game_id )
  }

  function loadChallengeTicker(challege_count){
    $('#game-ticker-count [data-completed-count]').html('1')
    $('#game-ticker-count [data-total-count]').html(challege_count)
    $('#code-game-ticker-container .progress-bar').css('width', 0)
  }

  function increaseChallengeTicker(){
    $('#game-ticker-count [data-completed-count]').html(parseInt($('#game-ticker-count [data-completed-count]').html()) + 1)
    progess_percentage = (parseFloat($('#game-ticker-count [data-completed-count]').html()) - 1)/parseFloat($('#game-ticker-count [data-total-count]').html())
    $('#code-game-ticker-container .progress-bar').css('width', (progess_percentage*100)+'%')
  }

  function completedChallenge(challenge_id){
    challenge_ids = current_game_challenge_ids
    for( var i = 0; i < challenge_ids.length; i++){
      if ( challenge_ids[i] === challenge_id) {
        challenge_ids.splice(i, 1);
        i--;
        break;
      }
    }
    increaseChallengeTicker()
    current_game_challenge_ids = challenge_ids
    loadChallenge(current_game_challenge_ids[0])
  }

  function displayChallengeCompletedConfettiForUser(session_hash){
    my_window = $("#code-main-wrapper[data-session-hash="+session_hash+"]")
    other_player_window = $(".other-player[data-session-hash="+session_hash+"]")
    if(my_window.length > 0){
      my_window.addClass('highlighted')
      setTimeout(function() {
        my_window.removeClass('highlighted')
      }, 1000)
    }
    else if (other_player_window.length > 0){
      other_player_window.addClass('highlighted')
      setTimeout(function() {
        other_player_window.removeClass('highlighted')
      }, 1000)
    }
  }

  function displayGameCompletedConfettiForUser(session_hash, player_name){
    my_window = $("#code-main-wrapper[data-session-hash="+session_hash+"]")
    other_player_window = $(".other-player[data-session-hash="+session_hash+"]")
    if(my_window.length > 0){
      $('#code-game-ticker-container .progress-bar').css('width', '100%')
      alert('You won!')
    }
    else if (other_player_window.length > 0){
      alert('You lost. ' + player_name + ' won!')
    }
    resetGame()
  }

  //////////////////// GAME EFFECTS ////////////////////
  function removePlayerEffects(){
    //
  }

  function resetGame(){
    setTimeout(function() {
      $('#code-challenge-container').html('').addClass('hidden')
      $('#code-main-wrapper').html('')
    }, 1000)
  }
