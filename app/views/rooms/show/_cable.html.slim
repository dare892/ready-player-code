javascript:
  current_game_challenge_ids = []
  current_game_id = ""

  $(document).ready(function(){
    App.global_chat = App.cable.subscriptions.create(
      {
        channel: "RoomChannel",
        room_id: $('#rooms-show').attr('data-room-id')
      },
      {
        connected: function(data) {
          console.log('connected')
          enableChatInput()
        },

        disconnected: function(data) {
          console.log('disconnected')
          disableChatInput()
        },
        received: function(data) {
          console.log('received', data)
          da_t = data['data_type']
          if(da_t == 'test'){
            console.log('test')
          }
          else if (da_t == 'user'){
            mg = data['message']
            if(mg == 'player_joined'){
              session_hash = data['session_hash']
              if(session_hash != "#{current_user.session_hash}" && $(".other-player[data-session-hash=" + session_hash + "]").length == 0){
                $.get("#{@room.id}/load_other_player/"+session_hash+'')
              }
            }
            else if(mg == 'player_left'){
              $('.other-player[data-session-hash='+data['session_hash']+']').remove()
            }
          }
          else if (da_t == 'chat'){
            displayChatMessage(data['sender_name'], data['chat_body'])
          }
          else if (da_t == 'game_status'){
            mg = data['message']
            if(mg == 'start_game'){
              myplayer_startGame(data['game_id'])
              allplayer_toggleStartBtn('hide')
            }
          }
          else if (da_t == 'in_game'){
            mg = data['message']
            if(mg == 'completed_challenge'){
              anyplayer_displayChallengeCompletedConfetti(data['session_hash'])
            }
            else if(mg == 'completed_game'){
              displayTiles()
              allplayer_getGameResults(data['game_id'])
              setTimeout(function(){
                resetGame()
              }, 3000)
            }
          }
        }
      }
    )
    hookChatInput()
    scrollToChatBottom()
  })

  //////////////////// CHATS ////////////////////
  function displayChatMessage(name, body){
    $('#room-chat-messages').append("<div class='chat-message'><span class='message-body'>" + name + "</span><span>" + body + "</span></div>")
    scrollToChatBottom()
  }

  function disableChatInput(){
    //TODO
  }

  function enableChatInput(){
    //TODO
  }

  function hookChatInput(){
    $('#room-chat-input-container form').submit(function(e){
      if($(this).find('input[type=text]').val() == ''){
        e.preventDefault()
      }
      else{
        setTimeout(function() {
          $('#room-chat-input-container form').find('input[type=text]').val('')
        }, 10)
      }
    })
  }

  function scrollToChatBottom(){
    $("#room-chat-messages").scrollTop($("#room-chat-messages")[0].scrollHeight);
  }

  //////////////////// GAME ////////////////////
  function myplayer_startGame(game_id){
    $('[data-entity=start-game-btn] button').addClass('hidden')
    myplayer_displayGameCountdown()
    otherplayers_displayProgressBar()
    setTimeout(function() {
      $.get('/games/'+game_id+'/load')
    }, 3500)
    current_game_id = game_id
  }

  function myplayer_loadChallenges(challenge_ids){
    current_game_challenge_ids = challenge_ids
    myplayer_loadChallenge(current_game_challenge_ids[0])
    myplayer_loadChallengeTicker(challenge_ids.length)
  }

  function myplayer_loadChallenge(challenge_id){
    $.get("/challenges/"+challenge_id+"/load?game_id=" + current_game_id )
  }

  function myplayer_loadChallengeTicker(challege_count){
    $('#game-ticker-count [data-completed-count]').html('1')
    $('#game-ticker-count [data-total-count]').html(challege_count)
    $('#code-game-ticker-container .progress-bar').css('width', 0)
  }

  function myplayer_increaseChallengeTicker(){
    $('#game-ticker-count [data-completed-count]').html(parseInt($('#game-ticker-count [data-completed-count]').html()) + 1)
    progess_percentage = (parseFloat($('#game-ticker-count [data-completed-count]').html()) - 1)/parseFloat($('#game-ticker-count [data-total-count]').html())
    $('#code-game-ticker-container .progress-bar').css('width', (progess_percentage*100)+'%')
  }

  function myplayer_completedChallenge(challenge_id){
    challenge_ids = current_game_challenge_ids
    for( var i = 0; i < challenge_ids.length; i++){
      if ( challenge_ids[i] === challenge_id) {
        challenge_ids.splice(i, 1);
        i--;
        break;
      }
    }
    myplayer_increaseChallengeTicker()
    current_game_challenge_ids = challenge_ids
    myplayer_loadChallenge(current_game_challenge_ids[0])
  }

  function otherplayers_displayProgressBar(){
    $('.other-player .progress-container .progress-bar').each(function(){
      $(this).css('width',0)
    })
    $('.other-player .progress-container').removeClass('hidden')
  }

  function anyplayer_displayChallengeCompletedConfetti(session_hash){
    my_window = $("#code-main-wrapper[data-session-hash="+session_hash+"]")
    other_player_window = $(".other-player[data-session-hash="+session_hash+"]")
    if(my_window.length > 0){
      //myplayer_highlightDiv(session_hash)
      $('#processing-code').addClass('hidden')
      show_ajax_system('Code Passed!')
    }
    else if (other_player_window.length > 0){
      otherplayer_increaseChallengeTicker(session_hash)
      otherplayer_highlightDiv(session_hash)
    }
  }

  function otherplayer_highlightDiv(session_hash){
    target_div = $(".other-player[data-session-hash="+session_hash+"]")
    target_div.addClass('highlight-div')
    setTimeout(function(){
      target_div.removeClass('highlight-div')
    }, 100)
    setTimeout(function(){
      target_div.addClass('highlight-div')
    }, 200)
    setTimeout(function(){
      target_div.removeClass('highlight-div')
    }, 300)
  }

  function allplayer_getGameResults(game_id){
    $.get("/games/" + game_id + "/display_results")
  }

  function otherplayer_increaseChallengeTicker(session_hash){
    wrapper = $('.other-player[data-session-hash='+session_hash+']')
    challenges_count = parseFloat($('#game-ticker-count [data-total-count]').html())
    challenges_new_count_for_player = parseFloat(wrapper.find('.progress-container').attr('data-currently-completed')) + 1
    wrapper.find('.progress-container').attr('data-currently-completed',challenges_new_count_for_player)
    $(wrapper).find('.progress-bar').css('width',((challenges_new_count_for_player/challenges_count)*100)+'%')
  }

  //////////////////// GAME EFFECTS ////////////////////
  function myplayer_resetUI(){
    $('#code-challenge-container').addClass('hidden')
    $('#code-main-wrapper').html('')
  }
  function otherplayers_resetUI(){
    $('.other-player .progress-container').each(function(){
      $(this).find('.progress-bar').css('width',0)
      $(this).attr('data-currently-completed',0)
    })
    $('.other-player .progress-container').addClass('hidden')
  }

  function allplayer_toggleStartBtn(toggle){
    if(toggle == 'hide'){
      $('[data-entity=start-game-btn]').addClass('hidden')
    }
    else{
      $('[data-entity=start-game-btn]').removeClass('hidden')
    }
  }


  function resetGame(){
    $('#processing-code').addClass('hidden')
    myplayer_resetUI()
    otherplayers_resetUI()
    allplayer_toggleStartBtn('show')
  }
